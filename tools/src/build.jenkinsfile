pipeline {

    agent {
        label 'windows10'
    }

    stages {
        stage('Build') {
            steps {
                bat 'nuget restore RAML.NET.sln'
                bat "msbuild RAML.NET.sln /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeployExtension=false"
            }
        }
        stage('Test') {
            steps {
                bat '"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\IDE\\Extensions\\TestPlatform\\vstest.console.exe" "RAML.Tools.Tests\\bin\\Release\\RAML.Tools.Tests.dll" /logger:trx;LogFileName=RamlTools.trx'
            }
        }
        stage('Sing Vsix') {
            steps {
                withCredentials([file(credentialsId: 'AMF-Net-Crt', variable: 'CERT')]) {
                    withCredentials([file(credentialsId: 'AMF-Net-Key', variable: 'KEY')]) {
                        withCredentials([string(credentialsId: 'AMF-Net-Pw', variable: 'PWD')]) {
                            bat "openssl pkcs12 -export -out mulesoft.pfx -inkey $KEY -in $CERT -password pass:$PWD"
                            bat "\"packages/Microsoft.VSSDK.VsixSignTool.16.0.28727/tools/vssdk/vsixsigntool.exe\" sign /f mulesoft.pfx /p $PWD /sha1 1b4f5c8bc7fa3748f025b4bc1b19f62d8dd25b11 MuleSoft.RAML.Tools/bin/Release/MuleSoft.RAML.Tools.vsix"
                        }
                    }
                }
            }
        }       
    }

    post {
        always {
            archiveArtifacts 'MuleSoft.RAML.Tools/bin/Release/*.vsix'
            mstest testResultsFile:"**/*.trx", keepLongStdio: true
        }
        cleanup {
            cleanWs()
        }
    }
}
