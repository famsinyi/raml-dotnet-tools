#%RAML 1.0
baseUri: https://mocksvc.mulesoft.com/mocks/e2924388-1d34-493d-b56e-bcd0ac6bc5ab # 
title: Retail_Product_Availability_Process_API
version: v2.0

uses: 
  inventory: /exchange_modules/org.mule.templates/retail-inventory/1.0.0/retail_inventory.raml

traits: 
  geoSearch: !include /exchange_modules/org.mule.templates/retail-geosearch/1.0.0/retail_geosearch.raml
  productSearch: !include traits/productSearch.raml

types: 

  AvailabilityForLocation: 
    type: object
    description: availability of product for location
    properties: 
      productId: 
        type: string
        description: identifier of product
      variantId: 
        type: string
        description: identifier of product variant 
      locationId: 
        type: string
        description: identifier of location
      locationType: 
        type: string
        enum: [STORE, WAREHOUSE, PARTNER]
        description: type of location
      quantityInStock: 
        type: integer
        description: count of products in stock 
      tax:  
        type: number
        description: tax price for product
      shipping: 
        type: number
        description: shipping price 


  ReservationRequest: 
    type: object
    description: reservation of product
    properties:
      productId: 
        type: string
        description: identifier of product
      variantId: 
        type: string
        description: identifier of product variant 
      customerId: 
        type: string
        description: identifier of customer 
      quantity: 
        type: integer
        description: count of reserved product
      locationId: 
        type: string
        description: identifier of location
      locationType: 
        type: string
        enum: [STORE, WAREHOUSE, PARTNER]
        description: type of location
        
  Tax:
    description: |
      tax value 
    properties: 
      totalTax: 
        type: number
        description: total tax
      
  Shipping:   
    description: |
      shipping value for warehouse  
    properties:
      totalShippingCost: 
        type: number
        description: total shipping value 
  
/availability:       
  get:
    displayName: Retrieve availability
    is: [ geoSearch, productSearch ]
    responses:
      200: 
        body: 
          application/json:
            type: inventory.Availability
            example: !include examples/product-availability-response.raml



/reservation: 
  post:
    displayName: Create reservation
    body:
      application/json:
        type: ReservationRequest 
        example: !include examples/product-reservation-request.raml
    responses:
      201: 
        body:
          application/json:
            example: 
              {
              "message": "Product was reserved"   
              }

                    
/locations:
  /{locationId}: 
    /availability:       
        get:
          displayName: Retrieve availability for location
          is: [  geoSearch, productSearch ]
          queryParameters: 
              locationType:
                required: true
                type: string
                enum: [STORE, WAREHOUSE, PARTNER]
              price: 
                type: number
                default: 0
          responses:
            200: 
              body: 
                application/json:
                  type: AvailabilityForLocation
                  example: !include examples/product-availability-for-location-response.raml


    /shipping:
        get:
          displayName: Retrieve shipping price 
          is: [ geoSearch, productSearch ]
          queryParameters:
            locationType:
              type: string 
              enum: [STORE, WAREHOUSE, PARTNER]
          description: |
            shipping value for location
          responses: 
            200:
              body: 
                application/json:
                  type: Shipping
                  example: !include examples/shipping-cost-response.raml            
    
    /taxes:
        get:
          displayName: Retrieve tax price
          is: [ geoSearch, productSearch ]
          queryParameters: 
            locationType:
              type: string 
              enum: [STORE, WAREHOUSE, PARTNER]
            zipCode?: 
              type: string        
          description: |
            tax value for location
          responses: 
            200:
              body: 
                application/json:
                  type: Tax
                  example: !include examples/total-tax-response.raml

