def openCover = "%WORKSPACE%\\src\\tools\\packages\\OpenCover.4.7.922\\tools\\OpenCover.Console.exe"
def nunitRunner = "%WORKSPACE%\\src\\tools\\packages\\NUnit.ConsoleRunner.3.10.0\\tools\\nunit3-console.exe"

def niqHome= "c:/cp/"
def iqUrl ="http://nexus-iq-0:8070"
def appId="dotnet-tools"
def iqCmd = "java -jar ${niqHome}/nexus-iq-cli.jar -s ${iqUrl} -i ${appId}"

def date = new Date()
def datefolder = date.format("%Y-%m-%d")

pipeline {

    environment {
        NUGET_CREDS = credentials('jenkins-amf-net.service')
    }
    agent {
        node {
            label 'windows10'
            customWorkspace 'c:\\cp'
        }
    }
    stages {
        stage('RAML.Api.Core')
        {
            stages {
                stage('Build') {
                    steps {
                        bat 'nuget restore src/apicore/src/RAML.Api.Core.sln'
                        bat "msbuild src/apicore/src/RAML.Api.Core.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Test') {
                    steps {
                        bat 'nunit3-console.exe "%WORKSPACE%\\src\\apicore\\src\\RAML.Api.Core.Tests\\bin\\Release\\RAML.API.Core.Tests.dll" --result=TestApiCore.xml'
                    }
                }
                stage('Coverage'){
                    steps {
                        dir("src\\apicore\\src\\RAML.Api.Core.Tests\\bin\\Release\\") {
                            bat "\"../../../packages/OpenCover.4.7.922/tools/OpenCover.Console.exe\" -target:\"../../../packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe\" -targetArgs:RAML.Api.Core.Tests.dll -register"
                        }
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'nuget pack src/apicore/src/RAML.API.Core/RAML.Api.Core.csproj -Prop Configuration=Release'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('RAML.Parser.Model')
        {
            stages {
                stage('Build') {
                    steps {
                        bat 'nuget restore src/raml/Raml.Parser.Model.sln'
                        bat "msbuild src/raml/Raml.Parser.Model.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'dotnet pack src/raml/RAML.Parser.Model/RAML.Parser.Model.csproj'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NexusNugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NexusNugetApiKey"
                        }
                    }
                }
            }
        }

        stage('RAML.NetCore.APICore'){
            stages{
                stage('Build'){
                    steps {
                        bat "dotnet restore src/core-apicore/RAML.NetCore.APICore.sln"
                        bat "dotnet build src/core-apicore/src/RAML.NetCore.APICore/RAML.NetCore.APICore.csproj"
                        bat "dotnet build src/core-apicore/src/RAML.NetCore.APICore.Tests/RAML.NetCore.APICore.Tests.csproj"
                    }
                }
                stage('Test'){
                    steps{
                        bat 'dotnet test src/core-apicore/src/RAML.NetCore.APICore.Tests/RAML.NetCore.APICore.Tests.csproj'
                    }
                }                  
                stage('Pack'){
                    steps {
                        bat "dotnet pack src/core-apicore/src/RAML.NetCore.APICore/RAML.NetCore.APICore.csproj"
                        bat "cp -r src/core-apicore/src/RAML.NetCore.APICore/bin/Debug/* ./"
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('RAML.ApiExplorer')
        {
            stages {
                stage('Build') {
                    steps {
                        script {
                            try {
                                // bat 'nuget sources remove -Name nexus'
                                bat "nuget sources add -Name nexus -Source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ -UserName $NUGET_CREDS_USR -Password $NUGET_CREDS_PSW -StorePasswordInClearText"
                            }
                            catch (err) {
                                // ignore already present source error
                                echo err.getMessage()
                            }
                        }
                        bat 'nuget restore src/apiexplorer/src/RAML.WebApiExplorer.sln'
                        bat "msbuild src/apiexplorer/src/RAML.WebApiExplorer.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Test') {
                    steps {
                        bat 'nunit3-console.exe "%WORKSPACE%\\src\\apiexplorer\\src\\RAML.WebApiExplorer.Tests\\bin\\Release\\RAML.WebApiExplorer.Tests.dll" --result=TestWebApiExplorer.xml'
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'nuget pack src/apiexplorer/src/RAML.WebApiExplorer/RAML.WebApiExplorer.csproj -Prop Configuration=Release'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('RAML.NetCore.ApiExplorer'){
            stages{
                stage('Build'){
                    steps {
                        script {
                            try {
                                // bat 'nuget sources remove -Name nexus'
                                bat "nuget sources add -Name nexus -Source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ -UserName $NUGET_CREDS_USR -Password $NUGET_CREDS_PSW -StorePasswordInClearText"
                            }
                            catch (err) {
                                // ignore already present source error
                                echo err.getMessage()
                            }
                        }
                        bat "dotnet restore src/core-apiexplorer/RAML.NetCoreAPIExplorer.sln"
                        bat "dotnet build src/core-apiexplorer/src/RAML.NetCoreAPIExplorer/RAML.NetCoreAPIExplorer.csproj"
                        bat "dotnet build src/core-apiexplorer/src/RAML.NetCoreAPIExplorer.Tests/RAML.NetCoreAPIExplorer.Tests.csproj"
                    }
                }
                stage('Test'){
                    steps{
                        bat 'dotnet test src/core-apiexplorer/src/RAML.NetCoreApiExplorer.Tests/RAML.NetCoreApiExplorer.Tests.csproj'
                    }
                }
                stage('Pack'){
                    steps {
                        bat "dotnet pack src/core-apiexplorer/src/RAML.Parser.Expressions/RAML.Parser.Expressions.csproj"
                        bat "dotnet pack src/core-apiexplorer/src/RAML.NetCoreAPIExplorer/RAML.NetCoreAPIExplorer.csproj"
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                            //bat "nuget push src/core-apiexplorer/src/RAML.NetCoreApiExplorer/bin/Debug/*.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
                // stage ("Nexus IQ") {
                //     steps {
                //         // nexusIQScan("dotnet-tools", "http://nexus-iq-0:8070", "src/core-apiexplorer/src/RAML.NetCoreApiExplorer/bin/Release/RAML.Parser.Expressions.nupkg")
                //         nexusIQScan("dotnet-tools", "http://nexus-iq-0:8070", "src/core-apiexplorer/src/RAML.NetCoreApiExplorer/bin/Release/RAML.NetCoreAPIExplorer.nupkg")
                //     }
                // }
            }
        }

        stage('RAML.Tools')
        {
            stages {
                stage('Build') {
                    steps {
                        script {
                            try {
                                // bat 'nuget sources remove -Name nexus'
                                bat "nuget sources add -Name nexus -Source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ -UserName $NUGET_CREDS_USR -Password $NUGET_CREDS_PSW -StorePasswordInClearText"
                            }
                            catch (err) {
                                // ignore already present source error
                                echo err.getMessage()
                            }
                        }
                        bat 'nuget restore src/tools/RAML.Tools.sln'
                        bat "msbuild src/tools/RAML.Tools.sln /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeployExtension=false"
                    }
                }
                stage('Test') {
                    steps {
                        dir("src/tools/RAML.Tools.TestRunner/bin/Release/"){
                            bat 'RAML.Tools.TestRunner.exe'
                        }
                        // bat 'nunit3-console.exe "%WORKSPACE%\\src\\tools\\RAML.Tools.Tests\\bin\\Release\\RAML.Tools.Tests.dll" --result=Testtools.xml'
                    }
                }
                stage('Coverage'){
                    steps {
                        bat "mkdir toolscoverage"
                        dir("src/tools/RAML.Tools.TestRunner/bin/Release/"){
                            bat "\"${openCover}\" -target:RAML.Tools.TestRunner.exe -register"
                            bat "\"../../../packages/ReportGenerator.4.3.2/tools/net47/ReportGenerator.exe\" -reports:results.xml -targetdir:%WORKSPACE%\\toolscoverage"
                        }
                        zip zipFile: 'toolscoverage.zip', dir: 'toolscoverage', archive: true
                    }
                }
                stage('Deploy to public nexus') {
                    steps {
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'nexus-public', passwordVariable: 'PUBLIC_NEXUS_PASS', usernameVariable: 'PUBLIC_NEXUS_USER']]) {

                            nexusArtifactUploader artifactId: 'RAML.Tools', classifier: 'release', file: './src/tools/RAML.Tools/bin/Release/RAML.Tools.vsix', type: 'vsix', groupId: 'dotnet', nexusUrl: 'repository-master.mulesoft.org/nexus', credentialsId: 'nexus-public', nexusPassword: "${PUBLIC_NEXUS_PASS}", nexusUser: "${PUBLIC_NEXUS_USER}", nexusVersion: 'nexus2', protocol: 'https', repository: 'releases', version: '3.0.2'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts 'src/tools/RAML.Tools/bin/Release/*.vsix'
            archiveArtifacts '*.nupkg'
            archiveArtifacts 'src/core-apicore/src/RAML.NetCore.APICore/bin/Debug/*.nupkg'
            archiveArtifacts 'src/core-apiexplorer/src/RAML.NetCoreApiExplorer/bin/Debug/*.nupkg'
            nunit testResultsPattern: '*.xml'
        }
        cleanup {
            cleanWs()
        }
    }
}
