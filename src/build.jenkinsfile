pipeline {

    environment {
        NUGET_CREDS = credentials('jenkins-amf-net.service')
    }
    agent {
        node {
            label 'windows10'
            customWorkspace 'c:\\cp'
        }
    }
    stages {
        stage('AMF.Api.Core')
        {
            stages {
                stage('Build') {
                    steps {
                        bat 'nuget restore src/apicore/src/AMF.Api.Core.sln'
                        bat "msbuild src/apicore/src/AMF.Api.Core.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Test') {
                    steps {
                        bat 'nunit3-console.exe "%WORKSPACE%\\src\\apicore\\src\\RAML.Api.Core.Tests\\bin\\Release\\AMF.API.Core.Tests.dll" --result=TestApiCore.xml'
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'nuget pack src/apicore/src/RAML.API.Core/AMF.Api.Core.csproj -Prop Configuration=Release'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('RAML.Parser.Model')
        {
            stages {
                stage('Build') {
                    steps {
                        bat "msbuild src/raml/Raml.Parser.Model.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'nuget pack src/raml/RAML.Parser.Model/RAML.Parser.Model.csproj -Prop Configuration=Release'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NexusNugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NexusNugetApiKey"
                        }
                    }
                }
            }
        }

        stage('AMF.NetCore.APICore'){
            stages{
                stage('Build'){
                    steps {
                        bat "dotnet restore src/core-apicore/AMF.NetCore.APICore.sln"
                        bat "dotnet build src/core-apicore/src/AMF.NetCore.APICore/AMF.NetCore.APICore.csproj"
                        bat "dotnet build src/core-apicore/src/AMF.NetCore.APICore.Tests/AMF.NetCore.APICore.Tests.csproj"
                    }
                }
                stage('Pack'){
                    steps {
                        bat "dotnet pack src/core-apicore/src/AMF.NetCore.APICore/AMF.NetCore.APICore.csproj"
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('AMF.ApiExplorer')
        {
            stages {
                stage('Build') {
                    steps {
                        bat 'nuget restore src/apiexplorer/src/AMF.WebApiExplorer.sln'
                        bat "msbuild src/apiexplorer/src/AMF.WebApiExplorer.sln /p:Configuration=Release /p:Platform=\"Any CPU\""
                    }
                }
                stage('Test') {
                    steps {
                        bat 'nunit3-console.exe "%WORKSPACE%\\src\\apiexplorer\\src\\AMF.WebApiExplorer.Tests\\bin\\Release\\AMF.WebApiExplorer.Tests.dll" --result=TestWebApiExplorer.xml'
                    }
                }
                stage('Pack') {
                    steps {
                        bat 'nuget pack src/apiexplorer/src/AMF.WebApiExplorer/AMF.WebApiExplorer.csproj -Prop Configuration=Release'
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
            }
        }

        stage('AMF.NetCore.ApiExplorer'){
            stages{
                stage('Build'){
                    steps {
                        bat "dotnet restore src/core-apiexplorer/AMF.NetCoreAPIExplorer.sln"
                        bat "dotnet build src/core-apiexplorer/src/AMF.NetCoreAPIExplorer/AMF.NetCoreAPIExplorer.csproj"
                        bat "dotnet build src/core-apiexplorer/src/AMF.NetCoreAPIExplorer.Tests/AMF.NetCoreAPIExplorer.Tests.csproj"
                    }
                }
                stage('Test'){
                    steps{
                        bat 'dotnet test src/core-apiexplorer/src/AMF.NetCoreApiExplorer.Tests/AMF.NetCoreApiExplorer.Tests.csproj'
                    }
                }
                stage('Pack'){
                    steps {
                        bat "dotnet pack src/core-apiexplorer/src/RAML.Parser.Expressions/RAML.Parser.Expressions.csproj"
                        bat "dotnet pack src/core-apiexplorer/src/AMF.NetCoreAPIExplorer/AMF.NetCoreAPIExplorer.csproj"
                        withCredentials([string(credentialsId: 'AMF-Net-NugetKey', variable: 'NugetApiKey')]) {
                            bat "nuget push *.nupkg -source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ $NugetApiKey"
                        }
                    }
                }
                stage ("Nexus IQ") {
                    steps {
                        nexusIQScan("dotnet-tools", "http://nexus-iq-0:8070", "src/core-apiexplorer/src/AMF.NetCoreApiExplorer/bin/Debug/RAML.Parser.Expressions.nupkg")
                        nexusIQScan("dotnet-tools", "http://nexus-iq-0:8070", "src/core-apiexplorer/src/AMF.NetCoreApiExplorer/bin/Debug/AMF.NetCoreAPIExplorer.nupkg")
                    }
                }
            }
        }

        stage('AMF.Tools')
        {
            stages {
                stage('Build') {
                    steps {
                        script {
                            try {
                                // bat 'nuget sources remove -Name nexus'
                                bat "nuget sources add -Name nexus -Source https://nexus.dev.build.msap.io/nexus/service/local/nuget/NuGet/ -UserName $NUGET_CREDS_USR -Password $NUGET_CREDS_PSW -StorePasswordInClearText"
                            }
                            catch (err) {
                                // ignore already present source error
                                echo err.getMessage()
                            }
                        }
                        bat 'nuget restore src/tools/AMF.Tools.sln'
                        bat "msbuild src/tools/AMF.Tools.sln /p:Configuration=Release /p:Platform=\"Any CPU\" /p:DeployExtension=false"
                    }
                }
                stage('Test') {
                    steps {
                        dir("src/tools/AMF.Tools.TestRunner/bin/Release/"){
                            bat 'AMF.Tools.TestRunner.exe'
                        }
                        // bat 'nunit3-console.exe "%WORKSPACE%\\src\\tools\\AMF.Tools.Tests\\bin\\Release\\AMF.Tools.Tests.dll" --result=Testtools.xml'
                    }
                }
                stage('Sing Vsix') {
                    steps {
                        withCredentials([file(credentialsId: 'AMF-Net-Crt', variable: 'CERT')]) {
                            withCredentials([file(credentialsId: 'AMF-Net-Key', variable: 'KEY')]) {
                                withCredentials([string(credentialsId: 'AMF-Net-Pw', variable: 'PWD')]) {
                                    bat "openssl pkcs12 -export -out mulesoft.pfx -inkey $KEY -in $CERT -password pass:$PWD"
                                    // bat "\"src/tools/packages/Microsoft.VSSDK.VsixSignTool.16.0.28727/tools/vssdk/vsixsigntool.exe\" sign /f mulesoft.pfx /p $PWD /sha1 1b4f5c8bc7fa3748f025b4bc1b19f62d8dd25b11 /fd sha256 src/tools/AMF.Tools/bin/Release/AMF.Tools.vsix"
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts 'src/tools/AMF.Tools/bin/Release/*.vsix'
            archiveArtifacts '*.nupkg'
            archiveArtifacts 'src/core-apicore/src/AMF.NetCore.APICore/bin/Debug/*.nupkg'
            archiveArtifacts 'src/core-apiexplorer/src/AMF.NetCoreApiExplorer/bin/Debug/*.nupkg'
            nunit testResultsPattern: '*.xml'
        }
        cleanup {
            cleanWs()
        }
    }
}
