= RAML .Net Tools

:source-highlighter: prettify

:!numbered:

The RAML .Net Tools allows developers to easily integrate and consume APIs that expose a RAML/OAS definition, or create a new ASP.NET implementation using a contract-first approach from a previously created RAML/OAS definition. See http://raml.org for information on RAML (RESTful API Markup Language). 

The tools are provided as a Visual Studio extension, allowing simple and natural integration of RAML/OAS into a normal development workflow.

A single installation package provides support for both client, service code-generation and RAML extraction scenarios.

== Prerequisites

* Visual Studio 2017 or 2019
* .NET Framework 4.6.2 or higher
* RAML 1.0/0.8 or OAS 2.0 compatible endpoint
* Supported languages: C# (other languages indirectly)

== Installation

. Run the AMF tools for Visual Studio Tools extension (VSIX) included in this package (ensure that Visual Studio is closed).
. On the initial screen select Visual Studio and click *Install*.
+
image::./docimages/RAML_NET_VSIXInstaller.png[align="center"]
+
. Wait for the installer to complete and click the *Close* button.

== Scenarios

- Generate API Client Code from a RAML/OAS Definition link:APIClientProxy.asciidoc[More info]
- Generate ASP.NET Base Implementation from a RAML/OAS Definition link:AspNetWebAPI.asciidoc[More info]
- Extract a RAML definition and HTML Documentation (API Console) from an ASP.NET Core or WebApi 2 app link:ExtractRAML.asciidoc[More info]


Next Steps:

- link:APIClientProxy.asciidoc[Generating an API Client]

- link:AspNetCore.asciidoc[Implementing an ASP.NET Core Application]

- link:AspNetWebAPI.asciidoc[Implementing an ASP.NET WebAPI Application]

- link:ExtractRAML.asciidoc[Extract a RAML definition from your Web app]

- link:Scenarios.asciidoc[More info about the functionality of these tools and each of these scenarios]


More info:

- link:FAQ.asciidoc[FAQ - Frequently Asked Questions]

- link:Exchange.asciidoc[Retrieving your specifications from Anypoint Exchange]

- link:CustomizingCodeGeneration.asciidoc[Customizing the Code Generation]

- link:PrimitiveTypes.asciidoc[Fine tuning generated .NET primitive types]

- link:SupportedVersionsAndTools.asciidoc[Supported .Net flavours/versions, IDEs and Tools]

Full contents links:

* link:Scenarios.asciidoc[Scenarios]

** link:Scenarios.asciidoc[API Client Code from a RAML/OAS Definition]

** link:Scenarios.asciidoc[ASP.NET Implementation from a RAML/OAS Definition]

** link:Scenarios.asciidoc[Extract a RAML definition from an ASP.NET Core or WebApi 2 app]

* link:SupportedVersionsAndTools.asciidoc[Supported .Net flavours/versions, IDEs and Tools]

* <<Prerequisites>>

* <<Installation>>

* link:APIClientProxy.asciidoc[Generating an API Client]

* link:APIClientProxy.asciidoc[Using the API Client with the Movies Sample]

** link:APIClientProxy.asciidoc[Consuming an API]

** link:APIClientProxy.asciidoc[Calling an Authenticated API with OAuth]

** link:APIClientProxy.asciidoc[Consuming the HTTP Response]

* link:AspNetCore.asciidoc[Implementing an ASP.NET Core Web Application]

* link:AspNetCore.asciidoc[Generating Unit Tests for your ASP.NET Core Web App]

* link:AspNetWebAPI.asciidoc[Implementing an ASP.NET WebAPI Application]

* link:AspNetWebAPI.asciidoc[Generating Unit Tests for your ASP.NET WebAPI App]

* link:AspNetWebAPI.asciidoc[Updating your RAML/OAS specification]

* link:AspNetWebAPI.asciidoc[Implementing a Controller in ASP.NET WebAPI]

* link:CustomizingCodeGeneration.asciidoc[Customizing the Generated Code]

** link:CustomizingCodeGeneration.asciidoc[Compatibility With New Versions of the Templates]

** link:CustomizingCodeGeneration.asciidoc[Customizing the Generated Code for the Client]

** link:CustomizingCodeGeneration.asciidoc[Customizing the Generated Code for the Asp.Net WebAPI]

* link:ExtractRAML.asciidoc[Metadata - Extract a RAML definition from your Web app]

** link:ExtractRAML.asciidoc[Api Console]

** link:ExtractRAML.asciidoc[Viewing the Raw RAML]

** link:ExtractRAML.asciidoc[Downloading the RAML]

** link:ExtractRAML.asciidoc[Customizing the Generated RAML on your ASP.NET Core app]

** link:ExtractRAML.asciidoc[Customizing the Generated RAML on your ASP.NET WebApi 2 app]

* link:Exchange.asciidoc[Exchange]

* link:PrimitiveTypes.asciidoc[Fine tuning generated .NET primitive types]

** link:PrimitiveTypes.asciidoc[Numeric types]

** link:PrimitiveTypes.asciidoc[Date types]

* link:FAQ.asciidoc[FAQ]
